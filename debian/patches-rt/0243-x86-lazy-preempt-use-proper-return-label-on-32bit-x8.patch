From 45c086ec4e89dcf9194c2b88b5ee38ffa79fe4ec Mon Sep 17 00:00:00 2001
From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Tue, 26 Feb 2019 14:53:49 +0100
Subject: [PATCH 243/290] x86: lazy-preempt: use proper return label on
 32bit-x86
Origin: https://www.kernel.org/pub/linux/kernel/projects/rt/4.19/older/patches-4.19.94-rt38.tar.xz

The lazy-preempt uses the wrong return label in case preemption isn't
possible. This results crash while returning to the kernel.

Use the correct return label if preemption isn' possible.

Reported-by: Andri Yngvason <andri@yngvason.is>
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 arch/x86/entry/entry_32.S | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/x86/entry/entry_32.S b/arch/x86/entry/entry_32.S
index 985988227877..d880352e410c 100644
--- a/arch/x86/entry/entry_32.S
+++ b/arch/x86/entry/entry_32.S
@@ -775,15 +775,15 @@ ENTRY(resume_kernel)
 
 	# atleast preempt count == 0 ?
 	cmpl $_PREEMPT_ENABLED,PER_CPU_VAR(__preempt_count)
-	jne restore_all
+	jne	restore_all_kernel
 
 	movl	PER_CPU_VAR(current_task), %ebp
 	cmpl	$0,TASK_TI_preempt_lazy_count(%ebp)	# non-zero preempt_lazy_count ?
-	jnz	restore_all
+	jnz	restore_all_kernel
 
 	testl	$_TIF_NEED_RESCHED_LAZY, TASK_TI_flags(%ebp)
-	jz	restore_all
-	test_int_off:
+	jz	restore_all_kernel
+test_int_off:
 #endif
 	testl	$X86_EFLAGS_IF, PT_EFLAGS(%esp)	# interrupts off (exception path) ?
 	jz	restore_all_kernel
-- 
2.24.1

