From: Ben Hutchings <ben@decadent.org.uk>
Date: Wed, 13 Jun 2018 04:31:00 +0100
Subject: random: Make getranndom() ready earlier
Forwarded: not-needed
Bug-Debian: https://bugs.debian.org/897599

This effectively reverts commit 4dfb3442bb7e "random: fix crng_ready()
test" which was commit 43838a23a05f upstream.  Unfortunately some
users of getrandom() don't expect it to block for long, and they need
to be fixed before we can allow this change into stable.

This doesn't directly revert that commit, but only weakens the ready
condition used by getrandom() when the GRND_RANDOM flag is not set.
Calls to getrandom() that return before the RNG is fully seeded will
generate warnings, just like reads from /dev/urandom.

---
--- a/drivers/char/random.c
+++ b/drivers/char/random.c
@@ -922,7 +922,7 @@ static inline void maybe_reseed_primary_
 
 static inline void crng_wait_ready(void)
 {
-	wait_event_interruptible(crng_init_wait, crng_ready());
+	wait_event_interruptible(crng_init_wait, crng_init > 0);
 }
 
 static void _extract_crng(struct crng_state *crng,
@@ -1947,7 +1947,7 @@ SYSCALL_DEFINE3(getrandom, char __user *
 	if (flags & GRND_RANDOM)
 		return _random_read(flags & GRND_NONBLOCK, buf, count);
 
-	if (!crng_ready()) {
+	if (crng_init == 0) {
 		if (flags & GRND_NONBLOCK)
 			return -EAGAIN;
 		crng_wait_ready();
