From: Ben Hutchings <ben@decadent.org.uk>
Date: Fri, 17 Jun 2016 01:46:59 +0100
Subject: MIPS: libgcc: Fix ABI change in 4.6.2
Forwarded: not-needed

Commit aedcfbe06558 ("MIPS: lib: Mark intrinsics notrace") causes the
hashes of these functions to change, even though their ABI hasn't.
Hide the 'notrace' from genksyms.

---
--- a/arch/mips/lib/ashldi3.c
+++ b/arch/mips/lib/ashldi3.c
@@ -2,6 +2,11 @@
 
 #include "libgcc.h"
 
+#ifdef __GENKSYMS__
+#undef notrace
+#define notrace
+#endif
+
 long long notrace __ashldi3(long long u, word_type b)
 {
 	DWunion uu, w;
--- a/arch/mips/lib/ashrdi3.c
+++ b/arch/mips/lib/ashrdi3.c
@@ -2,6 +2,11 @@
 
 #include "libgcc.h"
 
+#ifdef __GENKSYMS__
+#undef notrace
+#define notrace
+#endif
+
 long long notrace __ashrdi3(long long u, word_type b)
 {
 	DWunion uu, w;
--- a/arch/mips/lib/bswapdi.c
+++ b/arch/mips/lib/bswapdi.c
@@ -1,5 +1,10 @@
 #include <linux/module.h>
 
+#ifdef __GENKSYMS__
+#undef notrace
+#define notrace
+#endif
+
 unsigned long long notrace __bswapdi2(unsigned long long u)
 {
 	return (((u) & 0xff00000000000000ull) >> 56) |
--- a/arch/mips/lib/bswapsi.c
+++ b/arch/mips/lib/bswapsi.c
@@ -1,5 +1,10 @@
 #include <linux/module.h>
 
+#ifdef __GENKSYMS__
+#undef notrace
+#define notrace
+#endif
+
 unsigned int notrace __bswapsi2(unsigned int u)
 {
 	return (((u) & 0xff000000) >> 24) |
--- a/arch/mips/lib/cmpdi2.c
+++ b/arch/mips/lib/cmpdi2.c
@@ -2,6 +2,11 @@
 
 #include "libgcc.h"
 
+#ifdef __GENKSYMS__
+#undef notrace
+#define notrace
+#endif
+
 word_type notrace __cmpdi2(long long a, long long b)
 {
 	const DWunion au = {
--- a/arch/mips/lib/lshrdi3.c
+++ b/arch/mips/lib/lshrdi3.c
@@ -2,6 +2,11 @@
 
 #include "libgcc.h"
 
+#ifdef __GENKSYMS__
+#undef notrace
+#define notrace
+#endif
+
 long long notrace __lshrdi3(long long u, word_type b)
 {
 	DWunion uu, w;
--- a/arch/mips/lib/ucmpdi2.c
+++ b/arch/mips/lib/ucmpdi2.c
@@ -2,6 +2,11 @@
 
 #include "libgcc.h"
 
+#ifdef __GENKSYMS__
+#undef notrace
+#define notrace
+#endif
+
 word_type notrace __ucmpdi2(unsigned long long a, unsigned long long b)
 {
 	const DWunion au = {.ll = a};
